@mixin response($breakpoint) {
  @if $breakpoint == s-phone {
    @media (max-width: 26.88em) {
      @content;
    }
  }
  @if $breakpoint == M-phone {
    @media (max-width: 35.5em) {
      @content;
    }
  }
  @if $breakpoint == phone {
    // media size 640px
    @media (max-width: 40em) {
      @content;
    }
  }
  @if $breakpoint == vp-800 {
    @media (max-width: 50em) {
      @content;
    }
  }
  @if $breakpoint == tab-port {
    // media size 960px
    @media (max-width: 60em) {
      @content;
    }
  }
  @if $breakpoint == desktop {
    // media size 1280px
    @media (max-width: 80em) {
      @content;
    }
  }
  @if $breakpoint == m-desktop {
    // media size 1440px
    @media (max-width: 90em) {
      @content;
    }
  }
  @if $breakpoint == big-desktop {
    @media (min-width: 112.5em) {
      @content;
    }
  }
}
// Heading Component's Line
@mixin headingLine($direction, $position) {
  display: flex;

  @if $direction == "left" {
    &::after {
      display: none;
    }
    &::before {
      content: "";
      display: block;
      width: 6.4rem;
      height: 0.5rem;
      align-self: $position;
      background-color: $primary1;
      margin-right: 1.5rem;

      @if $position == flex-start {
        margin-top: 1.5rem;
      }
      @if $position == flex-end {
        margin-bottom: 1.5rem;
      }
    }
  } @else {
    &::before {
      display: none;
    }
    &::after {
      content: "";
      display: block;
      width: 6.4rem;
      height: 0.5rem;
      align-self: $position;
      background-color: $primary1;
      margin-left: 1.5rem;

      @if $position == flex-start {
        margin-top: 1.5rem;
      }
      @if $position == flex-end {
        margin-bottom: 1.5rem;
      }
    }
  }
}

@mixin setMembershipCardColors($color, $bgDarken: "false") {
  .membership-card {
    &_plan {
      svg {
        fill: $color;
      }
    }
    &_btn:not(:hover) {
      .btn-component:not(.primary_active):not(.secondary_active) {
        @if ($bgDarken == "true") {
          background: darken($color, 10%);
        }
        svg {
          fill: $color;
        }
      }
    }
    &_btn:hover {
      .btn-component:not(.primary_active):not(.secondary_active) {
        background: $color;
        svg {
          fill: darken($color, 10%);
        }
      }
    }
  }
}

@mixin setFaqAccordionZindex($n) {
  $k: $n * 2; // Double the size of the number as we have both question and answer in a single accordion
  @for $i from 1 to $n {
    &:nth-child(#{$i}) {
      h4 {
        z-index: $k;
      }
      .faq-component_answer {
        z-index: $k - 1;
      }
    }
    $k: $k - 2;
  }
}
